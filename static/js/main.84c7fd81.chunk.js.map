{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook-operations.js","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","redux/phonebook-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","contactsAsyncFetch","createAsyncThunk","a","pending","get","data","rejected","contactAdd","contact","post","contactDelite","id","delete","filterChange","createAction","items","createReducer","fulfilled","_","payload","state","action","some","name","alert","getNewContact","filter","combineReducers","store","configureStore","reducer","contacts","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ContactForm","dispatch","useDispatch","useState","setName","phone","setNumber","handleChange","e","currentTarget","value","resetForm","className","s","formBox","onSubmit","preventDefault","labelName","itemName","inputName","type","pattern","title","required","onChange","labelNumber","itemNumber","inputNumber","buttonAdd","ContactListItem","number","selectorFilter","getVisibleContacts","createSelector","toLowerFilter","toLowerCase","includes","ContactList","useSelector","useEffect","list","map","item","buttonDelete","onClick","Filter","nameFilter","inputFilter","target","App","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84c7fd81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2KB8_\",\"buttonDelete\":\"ContactList_buttonDelete__1HijL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2sG8k\",\"name\":\"ContactListItem_name__1wXu6\",\"number\":\"ContactListItem_number__rK91S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameFilter\":\"Filter_nameFilter__34PSg\",\"inputFilter\":\"Filter_inputFilter__1a1wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__YR399\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"ContactForm_formBox__3QB3f\",\"itemName\":\"ContactForm_itemName__1gghw\",\"itemNumber\":\"ContactForm_itemNumber__2LCBE\",\"inputName\":\"ContactForm_inputName__2aJr-\",\"inputNumber\":\"ContactForm_inputNumber__SmlLt\",\"buttonAdd\":\"ContactForm_buttonAdd__2SQfQ\"};","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\naxios.defaults.baseURL = \"https://61fe9f99a58a4e00173c992b.mockapi.io\";\r\n\r\nconst contactsAsyncFetch = createAsyncThunk(\r\n  \"contacts/contactsAsyncFetch\",\r\n  async () => {\r\n    contactsAsyncFetch.pending();\r\n    try {\r\n      const { data } = await axios.get(\"/contacts\");\r\n      return data;\r\n    } catch (error) {\r\n      contactsAsyncFetch.rejected(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst contactAdd = createAsyncThunk(\"contacts/contactAdd\", async contact => {\r\n  contactAdd.pending();\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    return data;\r\n  } catch (error) {\r\n    contactAdd.rejected(error);\r\n  }\r\n});\r\n\r\nconst contactDelite = createAsyncThunk(\"contacts/contactDelite\", async (id) => {\r\n  contactDelite.pending();\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    return id;\r\n  } catch (error) {\r\n    contactDelite.rejected(error);\r\n  }\r\n});\r\n\r\nexport { contactsAsyncFetch, contactAdd, contactDelite };\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterChange = createAction(\"filter/change\");","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  contactsAsyncFetch,\r\n  contactAdd,\r\n  contactDelite,\r\n} from \"./phonebook-operations\";\r\nimport { filterChange } from \"./phonebook-actions\";\r\n\r\nexport function getNewContact(state, { payload }) {\r\n  const haveContact = state.some(({ name }) => name === payload.name);\r\n  return !haveContact\r\n    ? [...state, payload]\r\n    : alert(`A ${payload.name} with the same name has already been added`);\r\n}\r\n\r\nexport const items = createReducer([], {\r\n  [contactsAsyncFetch.fulfilled]: (_, { payload }) => payload,\r\n  [contactAdd.fulfilled]: (state, action) => getNewContact(state, action),\r\n  [contactDelite.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nexport const filter = createReducer(\"\", {\r\n  [filterChange]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  // persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import logger from \"redux-logger\";\r\nimport contactsReducer from \"./phonebook-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n    // logger,\r\n  ],\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n// export { store, persistor };\r\nexport default store;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { contactAdd } from \"../../redux/phonebook-operations\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n\r\n      case \"phone\":\r\n        return setNumber(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(contactAdd({name, phone}));\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.formBox} onSubmit={handleSubmit}>\r\n      <label className={s.labelName}>\r\n        <p className={s.itemName}>Name</p>\r\n        <input\r\n          className={s.inputName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label className={s.labelNumber}>\r\n        <p className={s.itemNumber}>Phone</p>\r\n        <input\r\n          className={s.inputNumber}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={phone}\r\n        />\r\n      </label>\r\n      <button className={s.buttonAdd} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from \"./ContactListItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactListItem({ name, phone }) {\r\n  return (\r\n    <>\r\n      <p className={s.name}>Name: {name}</p>\r\n      <p className={s.number}>Phone: {phone}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nexport const selectorContacts = (state) => state.contacts.items;\r\nexport const selectorFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [selectorContacts, selectorFilter],\r\n  (contact, filter) => {\r\n    const toLowerFilter = filter.toLowerCase();\r\n    const allContacts = contact.filter(({ name }) =>\r\n      name.toLowerCase().includes(toLowerFilter));\r\n    return allContacts;\r\n  }\r\n);","import ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  contactsAsyncFetch,\r\n  contactDelite,\r\n} from \"../../redux/phonebook-operations\";\r\nimport {getVisibleContacts} from \"../../redux/phonebook-selectors\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsAsyncFetch());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    contacts && (\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, phone }) => (\r\n          <li className={s.item} key={id}>\r\n            <ContactListItem key={id} name={name} phone={phone} />\r\n            <button\r\n              className={s.buttonDelete}\r\n              type=\"button\"\r\n              onClick={() => dispatch(contactDelite(id))}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterChange } from \"../../redux/phonebook-actions\";\r\nimport { selectorFilter } from \"../../redux/phonebook-selectors\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(selectorFilter);\r\n\r\n  return (\r\n    <>\r\n      <p className={s.nameFilter}>Find contacts by name</p>\r\n      <input\r\n        className={s.inputFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={(e) => dispatch(filterChange(e.target.value))}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport s from \"./App.module.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={s.app}>\r\n      <ContactForm />\r\n      <Filter title={'PhoneBook'}/>\r\n      <ContactList title={'Contacts'}/>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}